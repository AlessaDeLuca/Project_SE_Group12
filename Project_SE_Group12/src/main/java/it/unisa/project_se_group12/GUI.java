/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package it.unisa.project_se_group12;

import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 * This class allows us to manage the user interface of the calculator
 */
public class GUI extends javax.swing.JFrame {

    StackManage stack;
    Variables variables;
    UDO udo;
    CustomOperation box;
    DefaultListModel<String> model = new DefaultListModel<String>();
    
    public GUI() {
        initComponents();
        stack = StackSingleton.getStack();
        variables = VariablesSingleton.getVariables();
        udo = new UDO();
        box = new CustomOperation(udo, model);
        operationList.setModel(model);
    }

    /**
     * This method is called from within the constructor to initialize the form. It check the content of the real and imaginary field, by initialized the corresponding 
     * field if it's empty.
     * WARNING: Do NOT modify this code.The content of this method is always regenerated by the Form Editor.
     * @param real real part of the complex number inserted by the user.
     * @param im imaginary part of the complex number inserted by the user.
     * @return true if the check was succesfull, false otherwise.
     */
    public boolean check(String real, String im){
        if (real.isEmpty() && im.isEmpty()){
            return false;
        }
        else if(real.isEmpty() && !(im.isEmpty())){
            real = "0";
        }
        else if (!(real.isEmpty()) && im.isEmpty()){
            im = "0";
        }
        try{
            Double.class.isInstance(Double.parseDouble(real));
            Double.class.isInstance(Double.parseDouble(im));
        }catch(NumberFormatException ex){
            JOptionPane.showMessageDialog(this, "Not supported charcters","ERROR",JOptionPane.ERROR_MESSAGE);
            realPartTextField.setText("");
            imPartTextField.setText("");
            return false;
        }
        return true; 
    }
    
    
    
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        realPartTextField = new javax.swing.JTextField();
        imPartTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        result = new javax.swing.JTextField();
        addButton = new javax.swing.JButton();
        enterButton = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        diffButton = new javax.swing.JButton();
        multiplyButton = new javax.swing.JButton();
        javax.swing.JButton divButton = new javax.swing.JButton();
        javax.swing.JButton invertButton = new javax.swing.JButton();
        javax.swing.JButton squareRootButton = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        stackArea = new javax.swing.JTextArea();
        clearButton = new javax.swing.JButton();
        dropButton = new javax.swing.JButton();
        dupButton = new javax.swing.JButton();
        overButton = new javax.swing.JButton();
        swapButton = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        varList = new javax.swing.JComboBox<>();
        varMinButton = new javax.swing.JButton();
        varAddButton = new javax.swing.JButton();
        varMajButton = new javax.swing.JButton();
        varSubButton = new javax.swing.JButton();
        variablesFields = new javax.swing.JTextField();
        customOperationButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        operationList = new javax.swing.JList<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 153, 153));

        jLabel1.setFont(new java.awt.Font("Tw Cen MT", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Real");
        jLabel1.setPreferredSize(new java.awt.Dimension(40, 40));

        jLabel2.setFont(new java.awt.Font("Tw Cen MT", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Imaginary");

        realPartTextField.setFont(new java.awt.Font("Tw Cen MT", 1, 14)); // NOI18N
        realPartTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                realPartTextFieldActionPerformed(evt);
            }
        });
        realPartTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                keyPressedReal(evt);
            }
        });

        imPartTextField.setFont(new java.awt.Font("Tw Cen MT", 1, 14)); // NOI18N
        imPartTextField.setMaximumSize(new java.awt.Dimension(214, 2147483647));
        imPartTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                imPartTextFieldActionPerformed(evt);
            }
        });
        imPartTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                keyPressedIM(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("+");

        result.setFont(new java.awt.Font("Tw Cen MT", 1, 14)); // NOI18N
        result.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resultActionPerformed(evt);
            }
        });

        addButton.setFont(new java.awt.Font("Tw Cen MT", 1, 24)); // NOI18N
        addButton.setForeground(new java.awt.Color(0, 153, 153));
        addButton.setText("+");
        addButton.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        enterButton.setBackground(new java.awt.Color(255, 255, 255));
        enterButton.setFont(new java.awt.Font("Tw Cen MT", 1, 18)); // NOI18N
        enterButton.setForeground(new java.awt.Color(0, 153, 153));
        enterButton.setText("ENTER");
        enterButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enterButtonActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("j");

        diffButton.setFont(new java.awt.Font("Tw Cen MT", 1, 24)); // NOI18N
        diffButton.setForeground(new java.awt.Color(0, 153, 153));
        diffButton.setText("-");
        diffButton.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        diffButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                diffButtonActionPerformed(evt);
            }
        });

        multiplyButton.setFont(new java.awt.Font("Tw Cen MT", 1, 24)); // NOI18N
        multiplyButton.setForeground(new java.awt.Color(0, 153, 153));
        multiplyButton.setText("x");
        multiplyButton.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        multiplyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                multiplyButtonActionPerformed(evt);
            }
        });

        divButton.setFont(new java.awt.Font("Tw Cen MT", 1, 24)); // NOI18N
        divButton.setForeground(new java.awt.Color(0, 153, 153));
        divButton.setText("÷");
        divButton.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        divButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                divButtonActionPerformed(evt);
            }
        });

        invertButton.setFont(new java.awt.Font("Tw Cen MT", 1, 18)); // NOI18N
        invertButton.setForeground(new java.awt.Color(0, 153, 153));
        invertButton.setText("Invert sign");
        invertButton.setActionCommand("-x");
        invertButton.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        invertButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                invertButtonActionPerformed(evt);
            }
        });

        squareRootButton.setFont(new java.awt.Font("Tw Cen MT", 1, 24)); // NOI18N
        squareRootButton.setForeground(new java.awt.Color(0, 153, 153));
        squareRootButton.setText("√");
        squareRootButton.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        squareRootButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                squareRootButtonActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tw Cen MT", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("STACK");

        stackArea.setColumns(20);
        stackArea.setFont(new java.awt.Font("Tw Cen MT", 2, 18)); // NOI18N
        stackArea.setRows(5);
        jScrollPane1.setViewportView(stackArea);

        clearButton.setFont(new java.awt.Font("Tw Cen MT", 3, 14)); // NOI18N
        clearButton.setForeground(new java.awt.Color(0, 153, 153));
        clearButton.setText("CLEAR");
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });

        dropButton.setFont(new java.awt.Font("Tw Cen MT", 3, 14)); // NOI18N
        dropButton.setForeground(new java.awt.Color(0, 153, 153));
        dropButton.setText("DROP");
        dropButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dropButtonActionPerformed(evt);
            }
        });

        dupButton.setFont(new java.awt.Font("Tw Cen MT", 3, 14)); // NOI18N
        dupButton.setForeground(new java.awt.Color(0, 153, 153));
        dupButton.setText("DUP");
        dupButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dupButtonActionPerformed(evt);
            }
        });

        overButton.setFont(new java.awt.Font("Tw Cen MT", 3, 14)); // NOI18N
        overButton.setForeground(new java.awt.Color(0, 153, 153));
        overButton.setText("OVER");
        overButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                overButtonActionPerformed(evt);
            }
        });

        swapButton.setFont(new java.awt.Font("Tw Cen MT", 3, 14)); // NOI18N
        swapButton.setForeground(new java.awt.Color(0, 153, 153));
        swapButton.setText("SWAP");
        swapButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                swapButtonActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tw Cen MT", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("OUTPUT");

        varList.setBackground(new java.awt.Color(204, 204, 204));
        varList.setFont(new java.awt.Font("Tw Cen MT", 1, 18)); // NOI18N
        varList.setForeground(new java.awt.Color(0, 153, 153));
        varList.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "y", "x", "z" }));
        varList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                varListActionPerformed(evt);
            }
        });

        varMinButton.setFont(new java.awt.Font("Tw Cen MT", 1, 18)); // NOI18N
        varMinButton.setForeground(new java.awt.Color(0, 153, 153));
        varMinButton.setText("<\"x\"");
        varMinButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                varMinButtonActionPerformed(evt);
            }
        });

        varAddButton.setFont(new java.awt.Font("Tw Cen MT", 1, 18)); // NOI18N
        varAddButton.setForeground(new java.awt.Color(0, 153, 153));
        varAddButton.setText("+\"x\"");
        varAddButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                varAddButtonActionPerformed(evt);
            }
        });

        varMajButton.setFont(new java.awt.Font("Tw Cen MT", 1, 18)); // NOI18N
        varMajButton.setForeground(new java.awt.Color(0, 153, 153));
        varMajButton.setText(">\"x\"");
        varMajButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                varMajButtonActionPerformed(evt);
            }
        });

        varSubButton.setFont(new java.awt.Font("Tw Cen MT", 1, 18)); // NOI18N
        varSubButton.setForeground(new java.awt.Color(0, 153, 153));
        varSubButton.setText("-\"x\"");
        varSubButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                varSubButtonActionPerformed(evt);
            }
        });

        variablesFields.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                variablesFieldsActionPerformed(evt);
            }
        });

        customOperationButton.setFont(new java.awt.Font("Tw Cen MT", 3, 18)); // NOI18N
        customOperationButton.setForeground(new java.awt.Color(0, 153, 153));
        customOperationButton.setText("Custom operation");
        customOperationButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customOperationButtonActionPerformed(evt);
            }
        });

        operationList.setFont(new java.awt.Font("Tw Cen MT", 1, 14)); // NOI18N
        operationList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        operationList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                operationListMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(operationList);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(88, 88, 88)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(addButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(diffButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(44, 44, 44)
                        .addComponent(squareRootButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(multiplyButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(divButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(14, 14, 14)
                                .addComponent(invertButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(realPartTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(54, 54, 54)
                        .addComponent(jLabel3))
                    .addComponent(result, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(56, 56, 56)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(imPartTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 76, Short.MAX_VALUE)
                        .addComponent(jLabel4)
                        .addGap(27, 27, 27)
                        .addComponent(enterButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 64, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(varMajButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(varMinButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(varAddButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(varSubButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(38, 38, 38)
                                .addComponent(varList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(variablesFields, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(customOperationButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(25, 25, 25)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 59, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(clearButton, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dropButton, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dupButton, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(swapButton, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(overButton, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(66, 66, 66)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(imPartTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel4)
                                .addComponent(enterButton))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(realPartTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel3)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(varMajButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                .addComponent(addButton)
                                                .addComponent(diffButton))
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                .addComponent(squareRootButton)
                                                .addComponent(varMinButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(6, 6, 6)
                                        .addComponent(varAddButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(52, 52, 52)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(invertButton, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(divButton)
                                            .addComponent(multiplyButton))))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(22, 22, 22)
                                        .addComponent(jLabel6))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(3, 3, 3)
                                        .addComponent(varSubButton))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(33, 33, 33)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(varList, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(variablesFields, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(result, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(customOperationButton, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(clearButton)
                            .addGap(35, 35, 35)
                            .addComponent(dropButton)
                            .addGap(35, 35, 35)
                            .addComponent(dupButton)
                            .addGap(35, 35, 35)
                            .addComponent(swapButton)
                            .addGap(35, 35, 35)
                            .addComponent(overButton))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
/**
 * Button that allows to the user to push a number from a variable into the stack.
 * @param evt 
 */
    private void varSubButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_varSubButtonActionPerformed
        if(stack.isEmpty()){
            JOptionPane.showMessageDialog(this, "Not enough numbers, insert another number!","ERROR",JOptionPane.ERROR_MESSAGE);
        }else if(variables.getMap().get(varList.getSelectedItem().toString())== null){
            JOptionPane.showMessageDialog(this, "Variable not initialized","ERROR",JOptionPane.ERROR_MESSAGE);
        }else{
            variables.subWithStack(varList.getSelectedItem().toString(), stack);
            variablesFields.setText(variables.getMap().get(varList.getSelectedItem().toString()).toString());
        }
    }//GEN-LAST:event_varSubButtonActionPerformed
/**
 * Button that allows to the user to push a number from the stack into a variable.
 * @param evt 
 */
    private void varMajButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_varMajButtonActionPerformed
        if(stack.isEmpty()){
            JOptionPane.showMessageDialog(this, "Not enough numbers, insert another number!","ERROR",JOptionPane.ERROR_MESSAGE);
        }else{
            variables.pushIntoVariable(varList.getSelectedItem().toString(), stack);
            stackArea.setText(stack.printStack());
            variablesFields.setText(variables.getMap().get(varList.getSelectedItem().toString()).toString());
        }
    }//GEN-LAST:event_varMajButtonActionPerformed
/**
 * Button that allows to the user to add the value of a variable at a number into the stack.
 * @param evt 
 */
    private void varAddButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_varAddButtonActionPerformed
        if(stack.isEmpty()){
            JOptionPane.showMessageDialog(this, "Not enough numbers, insert another number!","ERROR",JOptionPane.ERROR_MESSAGE);
        }else if(variables.getMap().get(varList.getSelectedItem().toString())== null){
            JOptionPane.showMessageDialog(this, "Variable not initialized","ERROR",JOptionPane.ERROR_MESSAGE);
        }else{
            variables.addWithStack(varList.getSelectedItem().toString(), stack);
            variablesFields.setText(variables.getMap().get(varList.getSelectedItem().toString()).toString());
        }
    }//GEN-LAST:event_varAddButtonActionPerformed
/**
 * Button that allows to the user to subtract the value of a variable at a number into the stack.
 * @param evt 
 */
    private void varMinButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_varMinButtonActionPerformed
        if(variables.getMap().get(varList.getSelectedItem().toString())== null){
            JOptionPane.showMessageDialog(this, "Variable not initialized","ERROR",JOptionPane.ERROR_MESSAGE);
        }else {
            variables.pushIntoStack(varList.getSelectedItem().toString(), stack);
            stackArea.setText(stack.printStack());
            variablesFields.setText("");
        }
    }//GEN-LAST:event_varMinButtonActionPerformed
/**
 * List of the variables that the user can use.
 * @param evt 
 */
    private void varListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_varListActionPerformed
        if(variables.getMap().get(varList.getSelectedItem().toString())== null){
            variablesFields.setText("");
        }else{
            variablesFields.setText(variables.getMap().get(varList.getSelectedItem().toString()).toString());
        }
    }//GEN-LAST:event_varListActionPerformed
/**
 * Button that allows to the user to swap hte last two numbers of the stack.
 * @param evt 
 */
    private void swapButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_swapButtonActionPerformed
        if(stack.swap()){
            stackArea.setText(stack.printStack());
        }else
            JOptionPane.showMessageDialog(this, "Not enough numbers, insert another number!","ERROR",JOptionPane.ERROR_MESSAGE);       
    }//GEN-LAST:event_swapButtonActionPerformed
/**
 * Button that allows to the user to use over function, that exchanges the last two elements of the stack.
 * @param evt 
 */
    private void overButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_overButtonActionPerformed
        if(stack.over()){
            stackArea.setText(stack.printStack());
        }else
            JOptionPane.showMessageDialog(this, "Not enough numbers, insert another number!","ERROR",JOptionPane.ERROR_MESSAGE);
    }//GEN-LAST:event_overButtonActionPerformed
/**
 * Button that allows to the user to use dup function, that pushes a copy of the second last element into the stack.
 * @param evt 
 */
    private void dupButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dupButtonActionPerformed
         if(stack.dupLastElement()){
            stackArea.setText(stack.printStack());
        }else
            JOptionPane.showMessageDialog(this, "Not enough numbers, insert another number!","ERROR",JOptionPane.ERROR_MESSAGE);
    }//GEN-LAST:event_dupButtonActionPerformed
/**
 * Button that allows to the user to use drop function, that  removes the last element by the stack.
 * @param evt 
 */
    private void dropButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dropButtonActionPerformed
        if(stack.isEmpty()){
            JOptionPane.showMessageDialog(this, "Not enough numbers, insert another number!","ERROR",JOptionPane.ERROR_MESSAGE);
        }else{
            stack.popFromStack();
            stackArea.setText(stack.printStack());
        }
    }//GEN-LAST:event_dropButtonActionPerformed
/**
 * Button that allows to the user to use clear function, that removes all the elements by the stack.
 * @param evt 
 */
    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed
        stack.clearStack();
        stackArea.setText("");
    }//GEN-LAST:event_clearButtonActionPerformed
/**
 * Button that allows to the user to use sqare root operation.
 * @param evt 
 */
    private void squareRootButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_squareRootButtonActionPerformed
        if(stack.squareRootOperation()){
            stackArea.setText(stack.printStack());
            result.setText(stack.peek().toString());
        }else
            JOptionPane.showMessageDialog(this, "Not enough numbers, insert another number!","ERROR",JOptionPane.ERROR_MESSAGE);  
    }//GEN-LAST:event_squareRootButtonActionPerformed
/**
 * Button that allows to the user to invert sign of a number.
 * @param evt 
 */
    private void invertButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_invertButtonActionPerformed
        if(stack.invertSignOperation()){
            stackArea.setText(stack.printStack());
            result.setText(stack.peek().toString());
        }else
            JOptionPane.showMessageDialog(this, "Not enough numbers, insert another number!","ERROR",JOptionPane.ERROR_MESSAGE);       
    }//GEN-LAST:event_invertButtonActionPerformed
/**
 * Button that allows to the user to use division operation.
 * @param evt 
 */
    private void divButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_divButtonActionPerformed
        if(stack.divisionOperation()){
            stackArea.setText(stack.printStack());
            result.setText(stack.peek().toString());
        }else
            JOptionPane.showMessageDialog(this, "Not enough numbers or number not divisible for zero, insert another number!","ERROR",JOptionPane.ERROR_MESSAGE);
    }//GEN-LAST:event_divButtonActionPerformed
/**
 * Button that allows to the user to use product operation.
 * @param evt 
 */
    private void multiplyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_multiplyButtonActionPerformed
        if(stack.multiplyOperation()){
            stackArea.setText(stack.printStack());
            result.setText(stack.peek().toString());
        }else
            JOptionPane.showMessageDialog(this, "Not enough numbers, insert another number!","ERROR",JOptionPane.ERROR_MESSAGE);
    }//GEN-LAST:event_multiplyButtonActionPerformed
/**
 * Button that allows to the user to use difference operation.
 * @param evt 
 */
    private void diffButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_diffButtonActionPerformed
        if(stack.subOperation()){
            stackArea.setText(stack.printStack());
            result.setText(stack.peek().toString());
        }else
            JOptionPane.showMessageDialog(this, "Not enough numbers, insert another number!","ERROR",JOptionPane.ERROR_MESSAGE);
    }//GEN-LAST:event_diffButtonActionPerformed
/**
 * Button that allows to the user to insert numbers onto the stack.
 * @param evt 
 */
    private void enterButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enterButtonActionPerformed
        String real = realPartTextField.getText();
        String im = imPartTextField.getText();
        if(check(real, im)){
            stack.addIntoStack(real, im);
            stackArea.setText(stack.printStack());
            realPartTextField.setText("");
            imPartTextField.setText("");
        }else
        JOptionPane.showMessageDialog(this, "Enter a valid Number","ERROR",JOptionPane.ERROR_MESSAGE);
    }//GEN-LAST:event_enterButtonActionPerformed
/**
 * Button that allows to the user to use add operation.
 * @param evt 
 */
    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        if(stack.addOperation()){
            stackArea.setText(stack.printStack());
            result.setText(stack.peek().toString());
        }else
            JOptionPane.showMessageDialog(this, "Not enough numbers, insert another number!","ERROR",JOptionPane.ERROR_MESSAGE);      
    }//GEN-LAST:event_addButtonActionPerformed
/**
 * Textfield that allows to the user to view the result of an operation.
 * @param evt 
 */
    private void resultActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resultActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_resultActionPerformed
/**
 * Function that allows to the user to insert imaginary part of a complex number from keyboard.
 * @param evt 
 */
    private void keyPressedIM(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_keyPressedIM
        if(evt.getKeyCode() == java.awt.event.KeyEvent.VK_ENTER){
            String real = realPartTextField.getText();
            String im = imPartTextField.getText();
            if(check(real, im)){
                stack.addIntoStack(real, im);
                stackArea.setText(stack.printStack());
                realPartTextField.setText("");
                imPartTextField.setText("");
            }
        }
    }//GEN-LAST:event_keyPressedIM
/**
 * Textfield that allows to the user to insert the imaginary part of a complex number.
 * @param evt 
 */
    private void imPartTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_imPartTextFieldActionPerformed

    }//GEN-LAST:event_imPartTextFieldActionPerformed
/**
 * Function that allows to the user to insert real part of a complex number from keyboard.
 * @param evt 
 */
    private void keyPressedReal(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_keyPressedReal
        if(evt.getKeyCode() == java.awt.event.KeyEvent.VK_ENTER){
            String real = realPartTextField.getText();
            String im = imPartTextField.getText();
            if(check(real, im)){
                stack.addIntoStack(real, im);
                stackArea.setText(stack.printStack());
                realPartTextField.setText("");
                imPartTextField.setText("");
            }
        }
    }//GEN-LAST:event_keyPressedReal
/**
 * Textfield that allows to the user to insert the real part of a complex number.
 * @param evt 
 */
    private void realPartTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_realPartTextFieldActionPerformed

    }//GEN-LAST:event_realPartTextFieldActionPerformed
/**
 * Button that allows to the user to to switch to the custom operation interface.
 * @param evt 
 */
    private void customOperationButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customOperationButtonActionPerformed
        box.setVisible(true);       
    }//GEN-LAST:event_customOperationButtonActionPerformed
/**
 * Textfield that allows to show to the user the number into a selected variable.
 * @param evt 
 */
    private void variablesFieldsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_variablesFieldsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_variablesFieldsActionPerformed
/**
 * List of a custom operation that user has already created.
 * @param evt 
 */
    private void operationListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_operationListMouseClicked
        String key = operationList.getSelectedValue();
        
        if(!udo.executeOperation(key, stack)){
            JOptionPane.showMessageDialog(this, "Math Error","ERROR",JOptionPane.ERROR_MESSAGE);
        }
        stackArea.setText(stack.printStack());
    }//GEN-LAST:event_operationListMouseClicked

        
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JButton clearButton;
    private javax.swing.JButton customOperationButton;
    private javax.swing.JButton diffButton;
    private javax.swing.JButton dropButton;
    private javax.swing.JButton dupButton;
    private javax.swing.JButton enterButton;
    private javax.swing.JTextField imPartTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton multiplyButton;
    private javax.swing.JList<String> operationList;
    private javax.swing.JButton overButton;
    private javax.swing.JTextField realPartTextField;
    private javax.swing.JTextField result;
    private javax.swing.JTextArea stackArea;
    private javax.swing.JButton swapButton;
    private javax.swing.JButton varAddButton;
    private javax.swing.JComboBox<String> varList;
    private javax.swing.JButton varMajButton;
    private javax.swing.JButton varMinButton;
    private javax.swing.JButton varSubButton;
    private javax.swing.JTextField variablesFields;
    // End of variables declaration//GEN-END:variables
}
